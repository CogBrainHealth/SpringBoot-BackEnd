name: CI/CD Pipeline

on:
  push:
    branches: [ "main", "develop" ]
    paths-ignore:
      - "README.md"
      - "docs/**"
  pull_request:
    types: [ closed ]
    branches: [ "develop" ]
    paths-ignore:
      - "README.md"
      - "docs/**"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Make application.yml
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_YML }}" > src/main/resources/application.yml
        shell: bash

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # gradle/actions/setup-gradle가 최신 권장
      - name: Configure Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle
        run: ./gradlew build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: cogcog
          path: build/libs/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: cogcog
          path: ./artifact

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            echo "✅ [1] 배포 디렉토리 준비"
            mkdir -p ~/deploy

            echo "🧹 [2] 기존 JAR 제거"
            rm -f ~/deploy/app.jar

            echo "📥 [3] GitHub Actions 서버에서 EC2로 JAR 복사"
            # 아래에서 SCP처럼 로컬에서 복사되도록 경로 수정
            exit

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          source: ./artifact/*.jar
          target: ~/deploy/app.jar

      - name: Restart Spring Boot App
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            echo "🛑 [1] 기존 애플리케이션 종료"
            pkill -f 'java -jar' || echo "기존 프로세스 없음"

            echo "🗑 [2] 이전 로그 백업"
            if [ -f ~/deploy/app.log ]; then
              mv ~/deploy/app.log ~/deploy/app_$(date +'%Y%m%d_%H%M%S').log
            fi

            echo "🚀 [3] 새 애플리케이션 실행"
            nohup java -jar ~/deploy/app.jar > ~/deploy/app.log 2>&1 &

            echo "✅ 배포 및 실행 완료. 로그: ~/deploy/app.log"