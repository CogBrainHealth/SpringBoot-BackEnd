name: CI/CD Pipeline

on:
  push:
    branches: [ "main", "develop" ]
    paths-ignore:
      - "README.md"
      - "docs/**"
  pull_request:
    types: [ closed ]
    branches: [ "develop" ]
    paths-ignore:
      - "README.md"
      - "docs/**"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Make application.yml
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_YML }}" > src/main/resources/application.yml
        shell: bash

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # gradle/actions/setup-gradle가 최신 권장
      - name: Configure Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle
        run: ./gradlew build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: cogcog
          path: build/libs/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: cogcog
          path: build/libs/

      - name: Deploy to EC2
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          APP_PORT: ${{ secrets.APP_PORT }}
        run: |
          echo "$EC2_SSH_KEY" > private_key.pem
          chmod 600 private_key.pem
          
          echo "📦 JAR 파일 찾는 중..."
          jar_file=$(find build/libs -name '*.jar' ! -name '*plain.jar' | head -n 1)
          echo "✅ 찾은 JAR 파일: $jar_file"
          
          echo "🚀 EC2로 JAR 파일 복사 중..."
          scp -i private_key.pem -o StrictHostKeyChecking=no "$jar_file" $EC2_USERNAME@$EC2_HOST:/home/$EC2_USERNAME/cogcog.jar
      
          echo "🔄 EC2에서 기존 프로세스 종료 + 새로 실행"
          ssh -i private_key.pem -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_HOST "
            echo \"🌐 포트 $APP_PORT를 사용하는 프로세스 종료 시도...\"
            PID=\$(lsof -ti tcp:$APP_PORT)
            if [ -n \"\$PID\" ]; then
              echo \"🛑 포트 $APP_PORT 사용 중인 프로세스 종료 (PID=\$PID)\"
              kill -15 \$PID
              sleep 5
            else
              echo \"ℹ️ 해당 포트를 사용하는 프로세스 없음\"
            fi

            echo \"✅ 새 JAR 실행 시작...\"
            nohup java -jar /home/$EC2_USERNAME/cogcog.jar > /home/$EC2_USERNAME/app.log 2>&1 &
            echo \"📄 로그: tail -f /home/$EC2_USERNAME/app.log 로 확인 가능\"
          "

          rm -f private_key.pem
